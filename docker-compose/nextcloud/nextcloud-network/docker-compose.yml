version: '3'

services:
  db:
    image: mariadb:10.5
    container_name: db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=margera
    env_file:
      - db.env

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  app:
    image: nextcloud:fpm-alpine
    container_name: nextcloud
    restart: always
    volumes:
      - /mnt/main_backup/nextcloud:/var/www/html
    environment:
      - MYSQL_HOST=db
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  web:
    build: ./web
    restart: always
    container_name: web
    volumes:
      - /mnt/main_backup/nextcloud:/var/www/html:ro
      - ./letsencrypt:/etc/letsencrypt:ro
    environment:
      - VIRTUAL_HOST=pival.duckdns.org
      - LETSENCRYPT_HOST=pival.duckdns.org
      - LETSENCRYPT_EMAIL=valentin.rudloff.perso@gmail.com
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - /mnt/main_backup/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 6080:80
      - 6443:443
    #labels:
    #  com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - ./letsencrypt:/etc/nginx/certs:ro
      #- vhost.d:/etc/nginx/vhost.d
      #- html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  #letsencrypt-companion:
  #  image: nginxproxy/acme-companion
  #  restart: always
  #  volumes:
  #    - certs:/etc/nginx/certs
  #    - acme:/etc/acme.sh
  #    - vhost.d:/etc/nginx/vhost.d
  #    - html:/usr/share/nginx/html
  #    - /var/run/docker.sock:/var/run/docker.sock:ro
  #  networks:
  #    - proxy-tier
  #  depends_on:
  #    - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier

volumes:
  db:
  certs:
  acme:
  vhost.d:
  html:

networks:
  proxy-tier:
